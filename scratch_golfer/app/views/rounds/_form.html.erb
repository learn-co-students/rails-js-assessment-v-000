<%= form_for Round.new do |f| %>
<%= f.label :score %>
<%= f.text_field :score %>
<br></br>
<%= f.label :putts %>
<%= f.text_field :putts %>
<br></br>
<%= f.label :course %>
<%= f.collection_select :course_id, Course.all, :id, :name %>
<%= link_to "Don't see the course you played listed? Create a new course.", new_course_path %>
<br></br>
<%= f.submit %>
<% end %>

<script type="text/javascript">

      $(".new_round").submit(function(event) {
          event.preventDefault();

          var $form = $(this);
          data = $form.serialize();

          class Round {
            constructor(courseName, score, putts) {
              this.courseName = courseName;
              this.score = score;
              this.putts = putts;
            }

            roundCreated() {
              return `You've successfully added your round at ${this.courseName} where you shot a ${this.score}!`
            }
              //prototype method
              // You could build a render div card
              // Best to place javascript model objects in a js file for each model; include in asset pipeline.
          }

        $.ajax({
          type : 'POST',
          url  :  '/rounds',
          data :  data,
          datatype: "json",
          encode : true,
          success: function(data) {
            let round = new Round(data["course"]["name"], data["score"], data["putts"]);
            debugger
            $("#round_info").append(round.roundCreated());
            $(".new_round").hide();
          }
        })

        .done(function(data) {
              // log data to the console so we can see
              console.log(data);
                // Question: Why can't I render data via my controller? It wants to refresh.

          });
      });


</script>
